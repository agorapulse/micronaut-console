/*
 * SPDX-License-Identifier: Apache-2.0
 *
 * Copyright 2020-2023 Agorapulse.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
plugins {
    // id "net.ltgt.apt-eclipse" version "0.21"
    // id "com.github.johnrengelman.shadow" version "5.0.0"
    id "application"
    id "groovy"
    id "micronaut-compatibility"
}

config {
    publishing {
        enabled = false
    }
}

repositories {
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
}

configurations {
    // for dependencies that are needed for development only
    developmentOnly
}

dependencies {
    annotationProcessor micronautMigratedDependency("micronaut-security")
    implementation project(':micronaut-console')
    implementation 'org.codehaus.groovy:groovy'
    implementation micronautMigratedDependency("micronaut-security")
    implementation micronautMigratedDependency("micronaut-security-jwt")
    implementation 'javax.inject:javax.inject:1'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.10'

    annotationProcessor platform("io.micronaut:micronaut-bom:$micronautExampleApplicationVersion")
    annotationProcessor "io.micronaut:micronaut-inject-java"
    annotationProcessor "io.micronaut:micronaut-validation"
    implementation platform("io.micronaut:micronaut-bom:$micronautExampleApplicationVersion")
    implementation "io.micronaut:micronaut-inject"
    implementation "io.micronaut:micronaut-validation"
    implementation "io.micronaut:micronaut-runtime"
    implementation "io.micronaut:micronaut-http-server-netty"
    implementation "io.micronaut:micronaut-http-client"
    runtimeOnly "ch.qos.logback:logback-classic:1.2.3"
    testAnnotationProcessor platform("io.micronaut:micronaut-bom:$micronautExampleApplicationVersion")
    testAnnotationProcessor "io.micronaut:micronaut-inject-java"

    testImplementation platform("io.micronaut:micronaut-bom:$micronautExampleApplicationVersion")
    testImplementation("org.spockframework:spock-core") {
        exclude group: "org.codehaus.groovy", module: "groovy-all"
    }

    testImplementation "com.agorapulse:gru-micronaut:$gruVersion"
}

test.classpath += configurations.developmentOnly

mainClassName = "micronaut.console.example.Application"

tasks.withType(JavaCompile){
    options.encoding = "UTF-8"
    options.compilerArgs.add('-parameters')
}

//shadowJar {
//    mergeServiceFiles()
//}

run.classpath += configurations.developmentOnly
run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')
